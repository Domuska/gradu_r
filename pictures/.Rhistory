setwd("C:/Users/Tomi/testAutomation/measurements/combined_results/wikipedia")
appium_frame_n_5g <- read.csv("appium_5g_native.csv")
appium_frame_n_5g <- appium_frame_n_5g[!(appium_frame_n_5g$failures != 0),]
espresso_frame_n_5g <- read.csv("espresso_5g_native.csv")
espresso_frame_n_5g <- espresso_frame_n_5g[!(espresso_frame_n_5g$failures != 0),]
uiautomator_frame_n_5g <- read.csv("uiautomator_5g_native.csv")
uiautomator_frame_n_5g <- uiautomator_frame_n_5g[!(uiautomator_frame_n_5g$failures != 0),]
tau_frame_n_5g <- read.csv("tau_5g_native.csv")
appium_frame_n_5g$toolname <- "AWN5"
espresso_frame_n_5g$toolname <- "EWN5"
uiautomator_frame_n_5g$toolname <- "UWN5"
tau_frame_n_5g$toolname <- "TWN5"
appium_frame_n <- read.csv("appium_wifi_native.csv")
appium_frame_n <- appium_frame_n[!(appium_frame_n$failures != 0),]
espresso_frame_n <- read.csv("espresso_wifi_native.csv")
espresso_frame_n <- espresso_frame_n[!(espresso_frame_n$failures != 0),]
uiautomator_frame_n <- read.csv("uiautomator_wifi_native.csv")
uiautomator_frame_n <- uiautomator_frame_n[!(uiautomator_frame_n$failures != 0),]
tau_frame_n <- read.csv("tau_wifi_native.csv")
appium_frame_n$toolname <- "AWNW"
espresso_frame_n$toolname <- "EWNW"
uiautomator_frame_n$toolname <- "UWNW"
tau_frame_n$toolname <- "TWNW"
combined_frame_wikipedia_n_5g <- rbind(appium_frame_n_5g, espresso_frame_n_5g, uiautomator_frame_n_5g, tau_frame_n_5g)
combined_frame_wikipedia_n <- rbind(appium_frame_n, espresso_frame_n, uiautomator_frame_n, tau_frame_n)
combined_frame_all_networks <- rbind(combined_frame_wikipedia_n, combined_frame_wikipedia_n_5g)
ggplot(combined_frame_all_networks, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds")
library(ggplot2)
ggplot(combined_frame_all_networks, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds")
appium_frame_n_4g <- read.csv("appium_4g_native.csv")
appium_frame_n_4g <- appium_frame_n_4g[!(appium_frame_n_4g$failures != 0),]
espresso_frame_n_4g <- read.csv("espresso_4g_native.csv")
espresso_frame_n_4g <- espresso_frame_n_4g[!(espresso_frame_n_4g$failures != 0),]
uiautomator_frame_n_4g <- read.csv("uiautomator_4g_native.csv")
uiautomator_frame_n_4g <- uiautomator_frame_n_4g[!(uiautomator_frame_n_4g$failures != 0),]
tau_frame_n_4g <- read.csv("tau_4g_native.csv")
appium_frame_n_4g$toolname <- "AWN4"
espresso_frame_n_4g$toolname <- "EWN4"
uiautomator_frame_n_4g$toolname <- "UWN4"
tau_frame_n_4g$toolname <- "TWN4"
combined_frame_wikipedia_n_4g <- rbind(appium_frame_n_4g, espresso_frame_n_4g, uiautomator_frame_n_4g, tau_frame_n_4g)
combined_frame_all_networks <- rbind(combined_frame_wikipedia_n, combined_frame_wikipedia_n_5g, combined_frame_wikipedia_n_4g)
ggplot(combined_frame_all_networks, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds")
View(appium_frame_n_4g)
View(espresso_frame_n_4g)
View(tau_frame_n_4g)
mean_appium_n_5g <- mean(appium_frame_n_5g$runTime_seconds)
mean_espresso_n_5g <- mean(espresso_frame_n_5g$runTime_seconds)
mean_uiautomator_n_5g <- mean(uiautomator_frame_n_5g$runTime_seconds)
mean_tau_n_5g <- mean(tau_frame_n_5g$runTime_seconds)
mean_appium_n_5g
?median
median(appium_frame_n_5g$runTime_seconds)
median(appium_frame_n_5g$runTime_seconds)
median(espresso_frame_n_5g$runTime_seconds)
median(tau_frame_n_5g$runTime_seconds)
median(uiautomator_frame_n_5g$runTime_seconds)
median(espresso_frame_n_5g$runTime_seconds)
mean_espresso_n_5g
mean(appium_frame_n_4g$runTime_seconds)
mean(espresso_frame_n_4g$runTime_seconds)
mean(tau_frame_n_4g$runTime_seconds)
mean(uiautomator_frame_n_4g$runTime_seconds)
median(appium_frame_n_4g$runTime_seconds)
median(espresso_frame_n_4g$runTime_seconds)
median(tau_frame_n_4g$runTime_seconds)
median(uiautomator_frame_n_4g$runTime_seconds)
cohen.d(appium_frame_n_4g$runTime_seconds, espresso_frame_n_4g$runTime_seconds)
library(effsize, lib.loc = "C:/Users/Tomi/R/gradu_r/effsize_0.6.4")
cohen.d(appium_frame_n_4g$runTime_seconds, espresso_frame_n_4g$runTime_seconds)
cohen.d(espresso_frame_n_4g$runTime_seconds, espresso_frame_n_4g$runTime_seconds)
cohen.d(uiautomator_frame_n_4g$runTime_seconds, espresso_frame_n_4g$runTime_seconds)
cohen.d(tau_frame_n_4g$runTime_seconds, espresso_frame_n_4g$runTime_seconds)
appium_frame_n_5g_f <- read.csv("appium_5g_native.csv")
appium_failures_5g_n = nrow(appium_frame_n_5g_f[appium_frame_n_5g_f$failures > 0,])
espresso_fai
appium_failures_5g_n
print_failures(appium_frame_n_5g_f)
print_failures <- (test_frame){
frame_failures = nrow(test_frame[test_frame$failures > 0,])
print_failures <- function(test_frame){
frame_failures = nrow(test_frame[test_frame$failures > 0,])
frame_failures
fail_percentage = frame_failures / nrow(test_frame) * 100
fail_percentage
}
print_failures(appium_frame_n_5g_f)
uiautomator_frame_n_f <- read.csv("uiautomator_wifi_native.csv")
#get number of rows in the frame that has more than 0 failures (a new frame is created inside parantheses)
uiautomator_failures_n = nrow(uiautomator_frame_n_f[uiautomator_frame_n_f$failures > 0,])
uiautomator_failures_n
fail_percentage_uiautomator_n = uiautomator_failures_n / nrow(uiautomator_frame_n_f) * 100
fail_percentage_uiautomator_n
print_failures(uiautomator_frame_n_f)
print_failures(appium_frame_n_5g_f)
tau_failures_n_5g <- read.csv("tau_failures_5g.csv")
tau_failures_n_5g <- read.csv("tau_native_5g_failures.csv")
tau_failures_n_5g <- read.csv("tau_5g_native_failures.csv")
tau_failures_n_5g / nrow(tau_frame_n_5g) * 100
appium_frame_n_f <- read.csv("appium_wifi_native.csv")
appium_failures_n = nrow(appium_frame_n_f[appium_frame_n_f$failures > 0,])
print_fail_percentage(appium_frame_n_f)
print_fail_percentage <- function(test_frame){
#get number of rows in the frame that has more than 0 failures (a new frame is created inside parantheses)
frame_failures = nrow(test_frame[test_frame$failures > 0,])
fail_percentage = frame_failures / nrow(test_frame) * 100
fail_percentage
}
print_fail_percentage(appium_frame_n_f)
appium_frame_n_f <- read.csv("appium_wifi_native.csv")
appium_failures_n = nrow(appium_frame_n_f[appium_frame_n_f$failures > 0,])
appium_failures_n
tau_failures_n <- read.csv("tau_wifi_native_failures.csv")
fail_percentage_tau_n = tau_failures_n / nrow(tau_frame_n) * 100
fail_percentage_tau_n
appium_frame_n_4g_f <- read.csv("appium_4g_native.csv")
espresso_frame_n_4g_f <- read.csv("espresso_4g_native.csv")
uiautomator_frame_n_4g_f <- read.csv("uiautomator_4g_native.csv")
tau_failures_n_4g <- read.csv("tau_4g_native_failures.csv")
print_fail_percentage(appium_frame_n_4g_f)
print_fail_percentage(espresso_frame_n_4g_f)
print_fail_percentage(uiautomator_frame_n_4g_f)
?ggplot
combined_frame_all_apps <- rbind(combined_frame_amaze, combined_frame_wikipedia_n, notes_combined,
levels = "AWN4", "EWN4", "TWN4", "UWN4")
combined_frame_all_networks <- rbind(combined_frame_wikipedia_n, combined_frame_wikipedia_n_5g, combined_frame_wikipedia_n_4g,
levels = "AWN4", "EWN4", "TWN4", "UWN4"))
combined_frame_all_networks <- rbind(combined_frame_wikipedia_n, combined_frame_wikipedia_n_5g, combined_frame_wikipedia_n_4g,
levels = "AWN4", "EWN4", "TWN4", "UWN4")
ggplot(combined_frame_all_networks, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds")
combined_frame_all_networks <- rbind(combined_frame_wikipedia_n, combined_frame_wikipedia_n_5g, combined_frame_wikipedia_n_4g)
ggplot(combined_frame_all_networks, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds")
ggplot(combined_frame_wikipedia_n_4g, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds") +
scale_x_discrete(limits = c("AWN4", "EWN4", "TWN4"), "UWN4")
ggplot(combined_frame_wikipedia_n_4g, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds") +
scale_x_discrete(limits = c("AWN4", "EWN4", "TWN4", "UWN4"))
ggplot(combined_frame_wikipedia_n_4g, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds") +
scale_x_discrete(limits = c("AWN4","UWN4", "EWN4", "TWN4"))
ggplot(combined_frame_all_networks, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds") +
scale_x_discrete(limits = c("AWNW", "EWNW", "TWNW", "UWNW", "AWN5", "EWN5", "TWN5", "UWN5", "AWN4", "EWN4", "TWN4", "UWN4"))
plot = ggplot(combined_frame_all_networks, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds")
plot + scale_x_discrete(limits = c("AWNW", "EWNW", "TWNW", "UWNW", "AWN5", "EWN5", "TWN5", "UWN5", "AWN4", "EWN4", "TWN4", "UWN4"))
ggplot(combined_frame_all_networks, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds") +
scale_x_discrete(limits = c("AWNW", "EWNW", "TWNW", "UWNW", "AWN5", "EWN5", "TWN5", "UWN5", "AWN4", "EWN4", "TWN4", "UWN4"))
appium_frame_n <- read.csv("appium_wifi_native.csv")
appium_frame_n <- appium_frame_n[!(appium_frame_n$failures != 0),]
espresso_frame_n <- read.csv("espresso_wifi_native.csv")
espresso_frame_n <- espresso_frame_n[!(espresso_frame_n$failures != 0),]
uiautomator_frame_n <- read.csv("uiautomator_wifi_native.csv")
uiautomator_frame_n <- uiautomator_frame_n[!(uiautomator_frame_n$failures != 0),]
tau_frame_n <- read.csv("tau_wifi_native.csv")
appium_frame_n$toolname <- "AWNW"
espresso_frame_n$toolname <- "EWNW"
uiautomator_frame_n$toolname <- "UWNW"
tau_frame_n$toolname <- "TWNW"
combined_frame_wikipedia_n <- rbind(appium_frame_n, espresso_frame_n, uiautomator_frame_n, tau_frame_n)
setwd("C:/users/Tomi/R/gradu_r/pictures")
png(filename="wikipedia_boxplot_native_wifi.png")
ggplot(combined_frame_all_networks, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds")
dev.off()
png(filename="all_apps_boxplot_native_wifi.png", width = 1060)
ggplot(combined_frame_wikipedia_n, aes(x = toolname, y = runTime_seconds)) +
geom_boxplot() +
xlab("Name of the tool") +
ylab("Test set run time in seconds")
dev.off()
